(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{170:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[s._m(0),s._v(" "),a("Avertissement"),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._m(4),s._v(" "),a("p",[s._v("[TODO : indiquer qu'on peut connaître le type d'une variable en plantant le compilateur en affiliant volontaire un type erroné]")])],1)},[function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"deboguer-les-variables-avec-les-placeholders-de-println"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deboguer-les-variables-avec-les-placeholders-de-println","aria-hidden":"true"}},[this._v("#")]),this._v(' Déboguer les variables avec les placeholders de "println!"')])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"afficher-une-vartaible-avec-println-et-ses-formatteurs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#afficher-une-vartaible-avec-println-et-ses-formatteurs","aria-hidden":"true"}},[this._v("#")]),this._v(" afficher une vartaible avec println! et ses formatteurs")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("p",[a("code",[s._v("println!")]),s._v(" permet d'afficher une variable à l'aide de différents formatteurs tels que "),a("code",[s._v("{}")]),s._v(", "),a("code",[s._v("{:?}")]),s._v(" , "),a("code",[s._v("{:#?}")]),s._v(", "),a("code",[s._v("{:p}")]),s._v(" et d'autres :")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"language-rust line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{attrs:{class:"token comment"}},[s._v('// pour une variable primitive atomique, "{}" est suffisant:')]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" x "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token string"}},[s._v('"hello world"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"{}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" x"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// pour les types plus complexes, un formatteur est nécessaire")]),s._v("\n"),a("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" array "),a("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("1")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token number"}},[s._v("3")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// ceci ne fonctionnera pas")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"this is my variable : {}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// error[E0277]: `[{integer}; 3]` doesn't implement `std::fmt::Display`")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// ceci fonctionne")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"this is my variable : {:?}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v('// affiche: "this is my variable : [1, 2, 3]"')]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// pour encore plus de lisibilité :")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"this is my variable : {:#?}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// affiche :")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// this is my variable : [")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("//    1,")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("//    2,")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("//    3")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// ]")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// affiche l'adresse mémoire, par exemple `0x7ffee458816c`")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// L'éperluette signifie \"donne moi l'adresse mémoire de cette variable\"")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// Mais Rust affiche par défaut la valeur au lieu de l'adresse dans println!,")]),s._v("\n"),a("span",{attrs:{class:"token comment"}},[s._v("// on doit donc ajouter le formateur `:p` pour voir réellement l'adresse.")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"{:p}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{attrs:{class:"token operator"}},[s._v("&")]),s._v("array"),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{attrs:{class:"token comment"}},[s._v("// affiche une valeur sous forme de séquences de bits, ici `11`.")]),s._v("\n"),a("span",{attrs:{class:"token function"}},[s._v("println!")]),a("span",{attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{attrs:{class:"token string"}},[s._v('"{:b}"')]),a("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" array"),a("span",{attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{attrs:{class:"token number"}},[s._v("2")]),a("span",{attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"connaitre-le-type-d-une-variable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connaitre-le-type-d-une-variable","aria-hidden":"true"}},[this._v("#")]),this._v(" Connaître le type d'une variable")])}],!1,null,null,null);e.options.__file="debogguer-une-variable.md";t.default=e.exports}}]);